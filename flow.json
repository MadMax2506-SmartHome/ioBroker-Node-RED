[
    {
        "id": "e9de432dbfd2a285",
        "type": "tab",
        "label": "alexa",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8706d1775ed872de",
        "type": "tab",
        "label": "mqtt",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5734cb6af7d23702",
        "type": "subflow",
        "name": "mqtt light controller",
        "info": "",
        "category": "mqtt-devices",
        "in": [
            {
                "x": 40,
                "y": 200,
                "wires": [
                    {
                        "id": "a293cec669acfefc"
                    },
                    {
                        "id": "1ff709bd8b8834d6"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1360,
                "y": 200,
                "wires": [
                    {
                        "id": "ced926561b507e7b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "module": "mqtt light controller",
            "author": "programming@max-janorschke.de",
            "keywords": "mqtt,light",
            "license": "Apache-2.0"
        },
        "color": "#F3B567",
        "inputLabels": [
            "msg"
        ],
        "outputLabels": [
            "payload"
        ],
        "icon": "node-red-contrib-polymer/ui_slider.png"
    },
    {
        "id": "029142ac14ba233b",
        "type": "subflow",
        "name": "keyboard light controller",
        "info": "",
        "category": "mqtt-devices",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "5a255de488b70588"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "icon": "node-red/light.svg"
    },
    {
        "id": "bb9b6a98f8635a55",
        "type": "subflow",
        "name": "bed wall light controller",
        "info": "",
        "category": "mqtt-devices",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "d18f89bc93e8cd58"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "data"
        ],
        "icon": "node-red/light.svg"
    },
    {
        "id": "0d47d69ad720d4a1",
        "type": "subflow",
        "name": "bed side light controller",
        "info": "",
        "category": "mqtt-devices",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "db211c36a289ccd6"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "icon": "node-red/light.svg"
    },
    {
        "id": "6e07c8ed867b3ea9",
        "type": "subflow",
        "name": "mqtt light receiver",
        "info": "",
        "category": "mqtt-devices",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "956a3865705a9cc8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1410,
                "y": 40,
                "wires": [
                    {
                        "id": "3212856150f0966d",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1440,
                "y": 100,
                "wires": [
                    {
                        "id": "3212856150f0966d",
                        "port": 1
                    }
                ]
            },
            {
                "x": 1440,
                "y": 160,
                "wires": [
                    {
                        "id": "3212856150f0966d",
                        "port": 2
                    }
                ]
            },
            {
                "x": 1410,
                "y": 220,
                "wires": [
                    {
                        "id": "3212856150f0966d",
                        "port": 3
                    }
                ]
            },
            {
                "x": 1430,
                "y": 280,
                "wires": [
                    {
                        "id": "3212856150f0966d",
                        "port": 4
                    }
                ]
            },
            {
                "x": 1430,
                "y": 340,
                "wires": [
                    {
                        "id": "3212856150f0966d",
                        "port": 5
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#F3B567",
        "outputLabels": [
            "active",
            "animation_time",
            "animation_type",
            "color",
            "orientation",
            "brightness"
        ],
        "icon": "node-red-contrib-polymer/ui_slider.png"
    },
    {
        "id": "c568e9a555f7d908",
        "type": "subflow",
        "name": "extract light configuration",
        "info": "",
        "category": "mqtt-devices",
        "in": [
            {
                "x": 40,
                "y": 180,
                "wires": [
                    {
                        "id": "93586914e27d9823"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 410,
                "y": 40,
                "wires": [
                    {
                        "id": "93586914e27d9823",
                        "port": 0
                    }
                ]
            },
            {
                "x": 440,
                "y": 100,
                "wires": [
                    {
                        "id": "93586914e27d9823",
                        "port": 1
                    }
                ]
            },
            {
                "x": 440,
                "y": 160,
                "wires": [
                    {
                        "id": "93586914e27d9823",
                        "port": 2
                    }
                ]
            },
            {
                "x": 410,
                "y": 220,
                "wires": [
                    {
                        "id": "93586914e27d9823",
                        "port": 3
                    }
                ]
            },
            {
                "x": 430,
                "y": 280,
                "wires": [
                    {
                        "id": "93586914e27d9823",
                        "port": 4
                    }
                ]
            },
            {
                "x": 430,
                "y": 340,
                "wires": [
                    {
                        "id": "93586914e27d9823",
                        "port": 5
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#C7E9C0",
        "outputLabels": [
            "active",
            "animation_time",
            "animation_type",
            "color",
            "orientation",
            "brightness"
        ],
        "icon": "node-red/light.svg"
    },
    {
        "id": "3b0a4ce480b9a89a",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "9b5dc2b3a2f9fa7c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.178.150",
        "port": "1883",
        "clientid": "ioBroker node-red",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "dbdce3880380f4e3",
        "type": "switch",
        "z": "5734cb6af7d23702",
        "name": "status switch",
        "property": "on",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 360,
        "wires": [
            [
                "483b8386ad117523"
            ],
            [
                "1164ac6e767479e7"
            ]
        ],
        "outputLabels": [
            "on",
            "off"
        ]
    },
    {
        "id": "483b8386ad117523",
        "type": "function",
        "z": "5734cb6af7d23702",
        "name": "active",
        "func": "msg.payload = \"active\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 340,
        "wires": [
            [
                "ced926561b507e7b"
            ]
        ]
    },
    {
        "id": "1164ac6e767479e7",
        "type": "function",
        "z": "5734cb6af7d23702",
        "name": "idle",
        "func": "msg.payload = \"idle\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 380,
        "wires": [
            [
                "ced926561b507e7b"
            ]
        ]
    },
    {
        "id": "5037aa98bfcce014",
        "type": "function",
        "z": "5734cb6af7d23702",
        "name": "kelvin to rgb",
        "func": "function clamp(x, min, max) {\n    if(x < min){ return Math.round(min); }\n    if(x > max){ return Math.round(max); }\n\n    return Math.round(x);\n}\n\nconst temp = msg.payload / 100;\n\nvar red, green, blue;\n\nif(temp <= 66){ \n    red = 255;\n    green = 99.4708025861 * Math.log(temp) - 161.1195681661;\n\n    if(temp <= 19){\n        blue = 0;\n    } else {\n        blue = 138.5177312231 * Math.log(temp - 10) - 305.0447927307;\n    }\n} else {\n    red = 329.698727446 * Math.pow(temp - 60, -0.1332047592);\n    green = 288.1221695283 * Math.pow(temp - 60, -0.0755148492 );\n    blue = 255;\n}\n\nmsg.payload = {\n    red: clamp(red, 0, 255),\n    green: clamp(green, 0, 255),\n    blue: clamp(blue, 0, 255)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 160,
        "wires": [
            [
                "42b038955dd5407b"
            ]
        ]
    },
    {
        "id": "e18f83b87837db46",
        "type": "function",
        "z": "5734cb6af7d23702",
        "name": "hs to rgb",
        "func": "const { rgb } = msg;\n\nmsg.payload = {\n    red: rgb[0],\n    green: rgb[1],\n    blue: rgb[2]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 40,
        "wires": [
            [
                "42b038955dd5407b"
            ]
        ]
    },
    {
        "id": "6afcee0475cf4ac3",
        "type": "function",
        "z": "5734cb6af7d23702",
        "name": "color temperature to kelvin",
        "func": "msg.payload = 1000000 / msg.ct;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 160,
        "wires": [
            [
                "5037aa98bfcce014"
            ]
        ]
    },
    {
        "id": "42b038955dd5407b",
        "type": "function",
        "z": "5734cb6af7d23702",
        "name": "rgb to color string",
        "func": "const { red, green, blue } = msg.payload;\n\nmsg.payload = `color: ${red};${green};${blue}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 100,
        "wires": [
            [
                "ced926561b507e7b"
            ]
        ]
    },
    {
        "id": "ced926561b507e7b",
        "type": "function",
        "z": "5734cb6af7d23702",
        "name": "payload",
        "func": "return { payload: msg.payload };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c87d1fb4d2200520",
        "type": "function",
        "z": "5734cb6af7d23702",
        "name": "map type",
        "func": "return {\n    ...msg,\n    type: \"status\"\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 360,
        "wires": [
            [
                "dbdce3880380f4e3"
            ]
        ]
    },
    {
        "id": "a293cec669acfefc",
        "type": "switch",
        "z": "5734cb6af7d23702",
        "name": "type switch",
        "property": "meta.input",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "sat",
                "vt": "str"
            },
            {
                "t": "hask",
                "v": "ct",
                "vt": "str"
            },
            {
                "t": "hask",
                "v": "bri",
                "vt": "str"
            },
            {
                "t": "hask",
                "v": "on",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 190,
        "y": 200,
        "wires": [
            [
                "1db90fd562db5f3e"
            ],
            [
                "2b0cba232bdc9251"
            ],
            [
                "4773852d12951665"
            ],
            [
                "c87d1fb4d2200520"
            ]
        ],
        "outputLabels": [
            "hs-color",
            "ct-color",
            "bri",
            "status"
        ]
    },
    {
        "id": "2b0cba232bdc9251",
        "type": "function",
        "z": "5734cb6af7d23702",
        "name": "map type",
        "func": "return {\n    ...msg,\n    type: \"ct-color\"\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 160,
        "wires": [
            [
                "6afcee0475cf4ac3"
            ]
        ]
    },
    {
        "id": "1db90fd562db5f3e",
        "type": "function",
        "z": "5734cb6af7d23702",
        "name": "map type",
        "func": "return {\n    ...msg,\n    type: \"hs-color\"\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 40,
        "wires": [
            [
                "e18f83b87837db46"
            ]
        ]
    },
    {
        "id": "4773852d12951665",
        "type": "function",
        "z": "5734cb6af7d23702",
        "name": "map type",
        "func": "return {\n    ...msg,\n    type: \"brightness\"\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 240,
        "wires": [
            [
                "e3f5fb136850b75e"
            ]
        ]
    },
    {
        "id": "e3f5fb136850b75e",
        "type": "function",
        "z": "5734cb6af7d23702",
        "name": "brightness",
        "func": "const { bri } = msg;\n\nmsg.payload = `brightness: ${bri}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 240,
        "wires": [
            [
                "ced926561b507e7b"
            ]
        ]
    },
    {
        "id": "1ff709bd8b8834d6",
        "type": "debug",
        "z": "5734cb6af7d23702",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 130,
        "y": 280,
        "wires": []
    },
    {
        "id": "8184ca14a3dd2487",
        "type": "function",
        "z": "029142ac14ba233b",
        "name": "parse",
        "func": "const {mqttTopic: topic, payload } = msg;\nreturn { payload: payload, topic: `conf/${topic}` };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 40,
        "wires": [
            [
                "cee285c71550ebde"
            ]
        ]
    },
    {
        "id": "44c08d1113fd255c",
        "type": "ioBroker get",
        "z": "029142ac14ba233b",
        "name": "device-id",
        "topic": "0_userdata.0.mqtt-devices.Tastaturbeleuchtung.id",
        "attrname": "mqttTopic",
        "payloadType": "value",
        "errOnInvalidState": "true",
        "x": 380,
        "y": 40,
        "wires": [
            [
                "8184ca14a3dd2487"
            ]
        ]
    },
    {
        "id": "cee285c71550ebde",
        "type": "mqtt out",
        "z": "029142ac14ba233b",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9b5dc2b3a2f9fa7c",
        "x": 670,
        "y": 40,
        "wires": []
    },
    {
        "id": "5a255de488b70588",
        "type": "subflow:5734cb6af7d23702",
        "z": "029142ac14ba233b",
        "name": "",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "44c08d1113fd255c"
            ]
        ]
    },
    {
        "id": "30c97ad8a7d93989",
        "type": "function",
        "z": "bb9b6a98f8635a55",
        "name": "parse",
        "func": "const {mqttTopic: topic, payload } = msg;\nreturn { payload: payload, topic: `conf/${topic}` };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 40,
        "wires": [
            [
                "b19931a47cf41a0e"
            ]
        ]
    },
    {
        "id": "4e8da7ce0ace9b8d",
        "type": "ioBroker get",
        "z": "bb9b6a98f8635a55",
        "name": "device-id",
        "topic": "0_userdata.0.mqtt-devices.Wandbeleuchtung.id",
        "attrname": "mqttTopic",
        "payloadType": "value",
        "errOnInvalidState": "true",
        "x": 380,
        "y": 40,
        "wires": [
            [
                "30c97ad8a7d93989"
            ]
        ]
    },
    {
        "id": "b19931a47cf41a0e",
        "type": "mqtt out",
        "z": "bb9b6a98f8635a55",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9b5dc2b3a2f9fa7c",
        "x": 670,
        "y": 40,
        "wires": []
    },
    {
        "id": "d18f89bc93e8cd58",
        "type": "subflow:5734cb6af7d23702",
        "z": "bb9b6a98f8635a55",
        "name": "",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "4e8da7ce0ace9b8d"
            ]
        ]
    },
    {
        "id": "730bf345abbeee4c",
        "type": "function",
        "z": "0d47d69ad720d4a1",
        "name": "parse",
        "func": "const {mqttTopic: topic, payload } = msg;\nreturn { payload: payload, topic: `conf/${topic}` };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 40,
        "wires": [
            [
                "c9943ea40a389d0a"
            ]
        ]
    },
    {
        "id": "83578f4e952f4b59",
        "type": "ioBroker get",
        "z": "0d47d69ad720d4a1",
        "name": "device-id",
        "topic": "0_userdata.0.mqtt-devices.seitliche_Bettbeleuchtung.id",
        "attrname": "mqttTopic",
        "payloadType": "value",
        "errOnInvalidState": "true",
        "x": 380,
        "y": 40,
        "wires": [
            [
                "730bf345abbeee4c"
            ]
        ]
    },
    {
        "id": "c9943ea40a389d0a",
        "type": "mqtt out",
        "z": "0d47d69ad720d4a1",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9b5dc2b3a2f9fa7c",
        "x": 670,
        "y": 40,
        "wires": []
    },
    {
        "id": "db211c36a289ccd6",
        "type": "subflow:5734cb6af7d23702",
        "z": "0d47d69ad720d4a1",
        "name": "",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "83578f4e952f4b59"
            ]
        ]
    },
    {
        "id": "956a3865705a9cc8",
        "type": "function",
        "z": "6e07c8ed867b3ea9",
        "name": "map object topic",
        "func": "const {objectKey} = msg;\n\nreturn {\n  objectKey: objectKey,\n  topic: `${objectKey}.id`\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 160,
        "wires": [
            [
                "15b45e9203ad0a76"
            ]
        ]
    },
    {
        "id": "15b45e9203ad0a76",
        "type": "ioBroker get",
        "z": "6e07c8ed867b3ea9",
        "name": "read mqtt topic",
        "topic": "",
        "attrname": "payload",
        "payloadType": "value",
        "errOnInvalidState": "nothing",
        "x": 380,
        "y": 160,
        "wires": [
            [
                "729e7d3af0248b46"
            ]
        ]
    },
    {
        "id": "729e7d3af0248b46",
        "type": "function",
        "z": "6e07c8ed867b3ea9",
        "name": "prepare mqtt",
        "func": "const {objectKey, payload} = msg;\nflow.set(\"objectKey\", objectKey);\n\nreturn {\n  topic: `status/${payload}`,\n  action: \"subscribe\",\n  qos: 0\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 160,
        "wires": [
            [
                "ece27af9951cc5aa"
            ]
        ]
    },
    {
        "id": "ece27af9951cc5aa",
        "type": "mqtt in",
        "z": "6e07c8ed867b3ea9",
        "name": "load data",
        "topic": "",
        "qos": "0",
        "datatype": "json",
        "broker": "9b5dc2b3a2f9fa7c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 740,
        "y": 160,
        "wires": [
            [
                "623d6196ab127694"
            ]
        ]
    },
    {
        "id": "3212856150f0966d",
        "type": "subflow:c568e9a555f7d908",
        "z": "6e07c8ed867b3ea9",
        "x": 1150,
        "y": 160,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "623d6196ab127694",
        "type": "function",
        "z": "6e07c8ed867b3ea9",
        "name": "insert objectKey",
        "func": "const objectKey = flow.get(\"objectKey\");\nreturn {\n    ...msg,\n    objectKey: objectKey\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 160,
        "wires": [
            [
                "3212856150f0966d"
            ]
        ]
    },
    {
        "id": "93586914e27d9823",
        "type": "function",
        "z": "c568e9a555f7d908",
        "name": "prepare data",
        "func": "const {\n    objectKey,\n    payload: {\n        status,\n        color,\n        orientation,\n        type,\n        time,\n        brightness\n    }\n} = msg;\n\nreturn [\n    { topic: `${objectKey}.active`, payload: status },\n    { topic: `${objectKey}.animation_time`, payload: time },\n    { topic: `${objectKey}.animation_typ`, payload: type },\n    { topic: `${objectKey}.color`, payload: JSON.stringify(color) },\n    { topic: `${objectKey}.orientation`, payload: orientation },\n    { topic: `${objectKey}.brightness`, payload: brightness }\n];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 180,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            []
        ],
        "outputLabels": [
            "active",
            "animation_time",
            "animation_typ",
            "color",
            "orientation",
            "brightness"
        ]
    },
    {
        "id": "19b6b90843ad1f70",
        "type": "function",
        "z": "e9de432dbfd2a285",
        "name": "map payload",
        "func": "return {\n    ...msg,\n    payload: null\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 100,
        "wires": [
            [
                "31716c21d3f492c1",
                "27eb4499b92b570d",
                "41bc62348c456fd0"
            ]
        ]
    },
    {
        "id": "31716c21d3f492c1",
        "type": "amazon-echo-device",
        "z": "e9de432dbfd2a285",
        "name": "Tastaturbeleuchtung",
        "topic": "Arduino Tastaturbeleuchtung",
        "x": 540,
        "y": 40,
        "wires": [
            [
                "40a55736717d3afa"
            ]
        ],
        "icon": "node-red/light.svg"
    },
    {
        "id": "27eb4499b92b570d",
        "type": "amazon-echo-device",
        "z": "e9de432dbfd2a285",
        "name": "Wandbeleuchtung",
        "topic": "Arduino Wandbeleuchtung am Bett",
        "x": 530,
        "y": 100,
        "wires": [
            [
                "b32fbf2207031e1d"
            ]
        ],
        "icon": "node-red/light.svg"
    },
    {
        "id": "41bc62348c456fd0",
        "type": "amazon-echo-device",
        "z": "e9de432dbfd2a285",
        "name": "seitliche Bettbeleuchtung",
        "topic": "Arduino seitliche Beleuchtung am Bett",
        "x": 550,
        "y": 160,
        "wires": [
            [
                "d2d57eb5bc89a750"
            ]
        ],
        "icon": "node-red/light.svg"
    },
    {
        "id": "40a55736717d3afa",
        "type": "subflow:029142ac14ba233b",
        "z": "e9de432dbfd2a285",
        "name": "",
        "x": 780,
        "y": 40,
        "wires": []
    },
    {
        "id": "b32fbf2207031e1d",
        "type": "subflow:bb9b6a98f8635a55",
        "z": "e9de432dbfd2a285",
        "name": "",
        "x": 760,
        "y": 100,
        "wires": []
    },
    {
        "id": "d2d57eb5bc89a750",
        "type": "subflow:0d47d69ad720d4a1",
        "z": "e9de432dbfd2a285",
        "name": "",
        "x": 810,
        "y": 160,
        "wires": []
    },
    {
        "id": "b583129d8ce91ee3",
        "type": "amazon-echo-hub",
        "z": "e9de432dbfd2a285",
        "port": "8899",
        "processinput": 0,
        "discovery": true,
        "x": 110,
        "y": 100,
        "wires": [
            [
                "19b6b90843ad1f70"
            ]
        ]
    },
    {
        "id": "7a8c5944f4c20677",
        "type": "subflow:6e07c8ed867b3ea9",
        "z": "8706d1775ed872de",
        "name": "",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ]
        ]
    },
    {
        "id": "ceb0add6e5d3a398",
        "type": "ioBroker out",
        "z": "8706d1775ed872de",
        "name": "device-value",
        "topic": "",
        "ack": "true",
        "autoCreate": "false",
        "stateName": "",
        "role": "",
        "payloadType": "",
        "readonly": "",
        "stateUnit": "",
        "stateMin": "",
        "stateMax": "",
        "x": 730,
        "y": 240,
        "wires": []
    },
    {
        "id": "fdfcca655b62ace5",
        "type": "subflow:6e07c8ed867b3ea9",
        "z": "8706d1775ed872de",
        "name": "",
        "x": 370,
        "y": 220,
        "wires": [
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ]
        ]
    },
    {
        "id": "1a3de10b76f3a53f",
        "type": "subflow:6e07c8ed867b3ea9",
        "z": "8706d1775ed872de",
        "name": "",
        "x": 370,
        "y": 320,
        "wires": [
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ]
        ]
    },
    {
        "id": "e698be51ee009282",
        "type": "subflow:c568e9a555f7d908",
        "z": "8706d1775ed872de",
        "name": "",
        "x": 470,
        "y": 420,
        "wires": [
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ],
            [
                "ceb0add6e5d3a398"
            ]
        ]
    },
    {
        "id": "81493e8d6814e1b0",
        "type": "mqtt in",
        "z": "8706d1775ed872de",
        "name": "",
        "topic": "status/devices",
        "qos": "0",
        "datatype": "json",
        "broker": "9b5dc2b3a2f9fa7c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 420,
        "wires": [
            [
                "948e666dbbfdf81b"
            ]
        ]
    },
    {
        "id": "948e666dbbfdf81b",
        "type": "function",
        "z": "8706d1775ed872de",
        "name": "map json",
        "func": "const { info: { deviceId } , config } = msg.payload;\n\nreturn {\n    objectKey: flow.get(deviceId),\n    payload: {...config}\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 420,
        "wires": [
            [
                "e698be51ee009282"
            ]
        ]
    },
    {
        "id": "1474a61a361739cf",
        "type": "inject",
        "z": "8706d1775ed872de",
        "name": "deskLightingBedSide",
        "props": [
            {
                "p": "objectKey",
                "v": "deskLightingBedSide",
                "vt": "flow"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "1a3de10b76f3a53f"
            ]
        ]
    },
    {
        "id": "3ddb0f14cf3ba513",
        "type": "inject",
        "z": "8706d1775ed872de",
        "name": "deskLightingBedWall",
        "props": [
            {
                "p": "objectKey",
                "v": "deskLightingBedWall",
                "vt": "flow"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "fdfcca655b62ace5"
            ]
        ]
    },
    {
        "id": "3705ae16d9b4183c",
        "type": "inject",
        "z": "8706d1775ed872de",
        "name": "deskLightingKeyboard",
        "props": [
            {
                "p": "objectKey",
                "v": "deskLightingKeyboard",
                "vt": "flow"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "7a8c5944f4c20677"
            ]
        ]
    },
    {
        "id": "bdfdc233c2e293f7",
        "type": "function",
        "z": "8706d1775ed872de",
        "name": "set object keys",
        "func": "for (var key of Object.keys(msg)) {\n    flow.set(key, msg[key]);\n}",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 40,
        "wires": []
    },
    {
        "id": "4067aaf229abb0ad",
        "type": "inject",
        "z": "8706d1775ed872de",
        "name": "set object keys",
        "props": [
            {
                "p": "deskLightingKeyboard",
                "v": "0_userdata.0.mqtt-devices.Tastaturbeleuchtung",
                "vt": "str"
            },
            {
                "p": "deskLightingBedWall",
                "v": "0_userdata.0.mqtt-devices.Wandbeleuchtung",
                "vt": "str"
            },
            {
                "p": "deskLightingBedSide",
                "v": "0_userdata.0.mqtt-devices.seitliche_Bettbeleuchtung",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "bdfdc233c2e293f7"
            ]
        ]
    }
]